{{ define "Header" }}

{{ linkJS "twitter-entities.js" }}
{{ linkJS "flickity.pkgd.js" }}
{{ linkCSS "flickity.css" }}

<style type="text/css">

.title_heading {
	position: relative;
}

.share_buttons {
	position: absolute;

	top: auto;
	bottom: 0;
	right:  0;

	text-align: right;
}

.share_played_number, .share_good_number {
	font-size: 1.5em;
}

.share_played_number i, .share_good_number i {
	font-size: 1.6em;
}

.share_good_number a {
	display: inline-block;
	text-shadow: 0 0 5px #aaaaaa;
}
.share_good_number a:hover {
	text-decoration: none;
}
.good_button_animate {
	transition: all 1s ease;
	-webkit-transition: all 1s ease;

	transform: rotate(360deg);
	-webkit-transform: rotate(360deg);
}
.container_box {
	width: 1000px;
}
.screen_box {
	width: 640px;
	height: 500px;
}
.comments {
	position: relative;

	width: 340px;
	height: 480px;

	margin-left: 5px;

	font-size: 1.2em;
}

.description {
	width: 640px;

	font-size: 1.2em;
}
.user_box {
}
.user_title {
	font-size: 1.2em;

	color: #666666;
}
.user {
	width: 300px;
	/*height: 180px;*/

	padding: 10px;

	background: #efefef;
}

#tweets {
	height: 100%;

	overflow-x: hidden;
	overflow-y: scroll;

	background: #eeeeee;
}
#tweets .text {
	font-size: 0.8em;
}
#tweets .name {
	font-size: 0.7em;
}
.share_box {
	position: absolute;

	bottom: 0;
	left: 0;
	right: 0;

	margin-bottom: -30px !important;

	background: #ffffff;
}
.share_box a {
	margin: 0;

	border-bottom: 3px solid #dddddd;

	background: #ffffff;

	cursor: text;
}
.share_box a:hover {
	border-bottom: 3px solid #00a194;
}
.gallery_box {
	width: 100%;
	padding-bottom: 35px;
}
.gallery {
	width: 100%;
}
.gallery-cell {
	width:  50%;
	height: 250px;

	margin-left: 10px;
}
.user_detail_link {
	position: absolute;

	bottom: 0;
	right: 10px;
}
.user .row-content {
	position: relative;
}

</style>
{{ end }}

{{ define "Content" }}

<div class="container_box center-block">

	<div id="errors" class="alert alert-danger">
		エラーが発生しています。<br />
	</div>

	<div class="row">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="title_heading row">
					<div class="title col-md-6">
						<h1>{{ .ProgramInfo.Title }}</h1>
						<span class="cap"> by <a href="/user/view/?u={{ .ProgramInfo.User }}">{{ .ProgramInfo.UserName }}</a>, at {{ .ProgramInfo.Created.Format "2006年1月_2日 15:04:05" }}</span>
					</div>
					<div class="share_buttons col-md-6">
						<span class="share_played_number"><i class="mdi-av-play-circle-outline"></i>{{ .ProgramInfo.Play }}</span> 
						<span class="share_good_number">
							<a href="javascript:good();" class="good_button" ><i class="mdi-social-mood"></i></a>
							<span id="good"></span>
						</span>
					</div>
				</div>
			</div>
			<div class="panel-body">
				<div class="screen_box pull-left">
					<canvas id="screen" width=640 height=480></canvas>
					<p>powered by <a href="http://hsp.tv/make/hsp3dish.html" target="_blank">hsp3dish.js</a> / OpenHSP</p>
				</div>
				<div class="comments pull-right">
					<i class="mdi-communication-comment"></i>コメント<br />
					<div id="tweets" class="list-group">

					</div>
					<div class="share_box">
						<a class="btn btn-default btn-block" href="javascript:openTwitter();">Twitterを使ってコメントする…</a>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="row">
		<div class="panel panel-default">
			<div class="panel-heading">
				<b>説明</b>
			</div>
			<div class="panel-body">
				<div class="description pull-left markdown">
					{{ markdown .ProgramInfo.Description }}
				</div>
				<div class="user_box pull-right">
					<span class="user_title"><i class="mdi-action-face-unlock"></i>作成者</span>
					<div class="user shadow-z-2">
						<div class="list-group">
							<div class="list-group-item">
								<div class="row-picture">
									<img id="profile_icon" class="circle" alt="icon">
								</div>
								<div class="row-content">
									<h4 class="list-group-item-heading"><a href="/user/view/?u={{ .ProgramInfo.User }}">{{ .ProgramInfo.UserName }}</a></h4>
									<p id="profile" class="list-group-item-text">ここはユーザの紹介文</p>
									<a class="user_detail_link" href="/user/view/?u={{ .ProgramInfo.User }}">詳しく...</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<br /><br />

	<div class="row">
		<div class="panel panel-default">
			<div class="panel-heading">
				<b>関連プログラム</b>
			</div>
			<div class="gallery_box panel-body">
				<div class="gallery" id="gallery">
					{{ range .RelatedPrograms }}
						{{ if eq .Title "" }}
						{{ else }}
						<div class="gallery-cell program_list_item">
							<div class="program_picture thumbnail">
								<img src="/api/program/thumbnail/?p={{ .Id }}" />
							</div>
							<div class="program_content">
								<div class="program_item_heading">
									<span class="h2"><a href="/program/view/?p={{ .Id }}">{{ .Title }}</a></span>
									<span class="small"><a href="/user/view/?u={{ .User }}">{{ .UserName }}</a></span>
								</div>
								<div class="program_item_accessory">
									<span class="played_number"><i class="mdi-av-play-circle-outline"></i>{{ .Play }}</span>
									<span class="good_number"><i class="mdi-social-mood"></i>{{ .Good }}</span>
									<div class="date text-right">{{ .Created.Format "Jan _2 3:04:05 PM (Mon)" }}</div>
								</div>
							</div>
						</div>
						{{ end }}
						<div class="gallery-cell"></div>
					{{ else }}
						<div class="gallery-cell">
							<span class="text-muted h2">プログラムが見つかりませんでした。</span>
						</div>
						<div class="gallery-cell">
						</div>
					{{ end }}
				</div>
			</div>
		</div>
	</div>

</div>

<script type="text/javascript">
	function good() {
		$(".good_button").addClass("good_button_animate");
		setTimeout(function() {
			$(".good_button").removeClass("good_button_animate");
		}, 1000);

		$.ajax({
			type: "POST",
			url:  "/api/program/good/",
			dataType: "json",
			data: {
				"p": "{{ .ProgramInfo.Id }}"
			}
		}).success(function(data) {
			$(".good_button").attr("href", "#");
			updateGoodCount();
			assertBottom("success", "いいね!しました。");
		}).error(function(data) {
			assertBottom("error", data.responseJSON.Message);
		});
	}

	function parseTwitterDate(tdate) {
		var system_date = new Date(Date.parse(tdate));
		var user_date = new Date();
		if (K.ie) {
			system_date = Date.parse(tdate.replace(/( \+)/, ' UTC$1'))
		}
		var diff = Math.floor((user_date - system_date) / 1000);
		if (diff <= 1) {return "just now";}
		if (diff < 20) {return diff + " seconds ago";}
		if (diff < 40) {return "half a minute ago";}
		if (diff < 60) {return "less than a minute ago";}
		if (diff <= 90) {return "one minute ago";}
		if (diff <= 3540) {return Math.round(diff / 60) + " minutes ago";}
		if (diff <= 5400) {return "1 hour ago";}
		if (diff <= 86400) {return Math.round(diff / 3600) + " hours ago";}
		if (diff <= 129600) {return "1 day ago";}
		if (diff < 604800) {return Math.round(diff / 86400) + " days ago";}
		if (diff <= 777600) {return "1 week ago";}
		return "on " + system_date;
	}
	
	// from http://widgets.twimg.com/j/1/widget.js
	var K = function () {
		var a = navigator.userAgent;
		return {
			ie: a.match(/MSIE\s([^;]*)/)
		}
	}();	

	var max_id = "1";

	function reloadComments() {
		$.ajax({
			url: "/api/twitter/search/",
			type: "GET",
			dataType: "json",
			cache: false,
			data: {
				"pn": "{{ .ProgramInfo.Title }}",
				"n": 10,
				"o": max_id
			}
		}).success(function (data, status) {
			var tweets = $("<div />");

			$.each(data.Tweets.statuses, function (i, stat) {
				var tweet = $("<div />").addClass("tweet").addClass("list-group-item");
				var iconbox = $("<div />").addClass("row-picture");
				var icon = $("<img />").attr("src", stat.user.profile_image_url).attr("alt", stat.user.name).addClass("circle");
				var contents = $("<div />").addClass("row-content");
				var least = $("<div />").addClass("least-content").text(parseTwitterDate(stat.created_at));
				var name = $("<h4 />").addClass("list-group-item-heading").append($("<a />").attr("href", "https://twitter.com/"+stat.user.name).text(stat.user.screen_name).addClass("name"));
				var text = $("<p />").addClass("text list-group-item-text").html(linkify_entities(stat));
				iconbox.append(icon);
				tweet.append(iconbox);
				contents.append(name).append(text).append(least);
				tweet.append(contents);
				tweets.append(tweet).append($("<div />").addClass("list-group-separator"));
			});

			$("#tweets").prepend(tweets.html());

			max_id = data.Tweets.search_metadata.max_id_str;
		}).error( function (data, status, error) {
		});

	}

	function setProfile() {
		$.ajax({
			url: "/api/user/info/",
			type: "GET",
			dataType: "json",
			cache: false,
			data: {
				"u": "{{ .ProgramInfo.User }}"
			},
		}).success(function (data, status) {
			$("#profile").text(data.Profile.substring(0, 50) + "...");
			$("#profile_icon").attr("src", data.IconURL);
		}).error(function (data, status, error) {
		});
	}

	function openTwitter() {

		var title = encodeURIComponent("{{ .ProgramInfo.Title }}");
		var hashtags = encodeURIComponent("hsproom #"+"{{ .ProgramInfo.Title }}".replace(/[\s\x21-\x2f\x3a-\x40\x5b-\x60\x7b-\x7e]/g, ""));
		var url   = encodeURIComponent(location.href);

		// ユーザ名の取得は後で統一も要検討
		$.ajax({
			url: '/api/user/info/',
			type: "GET",
			dataType: "json",
			data: {
				"u": "{{ .ProgramInfo.User }}"
			}
		}).success(function (data, status) {
			var user = data.ScreenName;

			open("https://twitter.com/intent/tweet?text="+title+"&amp;amp;url="+url+"&amp;amp;hashtags="+hashtags+"&amp;amp;via="+user, "プログラムにコメントする", "width=600,height=331");
		}).error(function (data, status, error) {
			open("https://twitter.com/intent/tweet?text="+title+"&amp;amp;url="+url+"&amp;amp;hashtags="+hashtags, "プログラムにコメントする", "width=600,height=331");
		});


	}

	function updateGoodCount() {
	
		$.ajax({
			type: "GET",
			dataType: "json",
			url: "/api/program/good/count/",
			data: {
				"p": {{ .ProgramInfo.Id }}
			}
		}).success(function (data) {
			$("#good").text(data.GoodCount);
		}).error(function (data) {
			assertBottom("いいね数の取得に失敗しました。");
		});
	}

	$(document).ready(function() {
		reloadComments();
		setProfile();

		setInterval(reloadComments, 15000);

		$("#gallery").flickity({
			cellAlign: "center",
			wrapAround: true,
			setSize: false
		});

		updateGoodCount();

		$("#errors").hide();
	});

	var pid   = {{ .ProgramInfo.Id }};
	var steps = "{{ .ProgramInfo.Steps }}";

	{{ plugin "loadProgram" }}

</script>

{{ linkJS "hsp3dish.js" }}

{{ end }}
