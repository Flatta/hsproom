{{ define "Header" }}
{{ linkCSS "jquery.uploadbox.css"}}
<style type="text/css">

	#title {
		width: 100%;
	}
	#preview {
		width:  100%;
		height: 100%;

		overflow-x: hidden;
		overflow-y: scroll;
	}
	#description {
		width: 100%;
		height: 100%;

		border-right: 5px dashed #eeeeee;
	}
	.help_cap {
		font-size: 0.9em;

		color: #666666;
	}
	.preview_nomarkdown {
		width: 100%;
		height: 100%;

		font-size: 2.5em;
		padding: 100px;

		color: #aaaaaa;
	}
</style>
{{ end }}

{{ define "Content" }}

<div class="row">
	<div class="col-md-8 col-md-offset-2">
		<h1>プログラムの編集</h1>
	</div>
</div>

<form id="update_program" role="form" class="form-horizonal" action="/api/program/update/" method="POST" enctype="multipart/form-data">
	<div class="row">
		<div class="col-md-8 col-md-offset-2">
			<div class="panel panel-default">
				<div class="panel-heading">
					プログラムの情報
				</div>
				<div class="panel-body">
					<fieldset>
	
						<input type="hidden" name="id" value="{{ .Program.Id }}" />
						
						<div class="form-group row">
							<label for="title" class="col-md-3 form-label text-right">1. タイトル</label>
							<div class="col-md-6">
								<input type="text" id="title" class="form-control floating-label" placeholder="プログラムのタイトルを入力してください..." name="title" value="{{ .Program.Title }}" />
							</div>
							<div class="help_cap col-md-3">
								<p>
								</p>
							</div>
						</div>
	
						<div class="form-group row">
							<label for="thumb_box" class="col-md-3 form-label text-right">2. サムネイル</label>
							<div class="col-md-6">
								<div id="thumb_box"></div>
							</div>
							<div class="help_cap col-md-3">
								<p>
									png, gif, jpg, bmpに対応しています。<strong>3MBまで</strong>のファイルが使用できます。
								</p>
	
							</div>
			
						</div>
			
						<div class="form-group row">
							<label for="startax_box" class="col-md-3 form-label text-right">3. プログラム</label>
			
							<div class="col-md-6">
			
								<div id="startax_box"></div>
							</div>
							<div class="help_cap col-md-3">
								<p>
									HSP3に付属の、「HSP3Dish Helper」で「hsp3dish.js」用に変換した際に出力される、「(ファイル名).ax」ファイルをドロップしてください。<strong>1MBまで</strong>対応しています。
								</p>
							</div>
			
			
						</div>
			
						<div class="form-group row">
							<label for="attachment_box" class="col-md-3 form-label text-right">4. 添付するファイル</label>
							<div class="col-md-6">
								<h5>全体のファイルサイズ</h5>
								<div class="progress progress-default">
									<div id="attachments_capacity" class="capacity progress-bar" style="width: 0%"></div>
								</div>
								<div id="attachments_box"></div>
							</div>
							<div class="help_cap col-md-3">
								<p>
									プログラム中で使用するファイル(画像, 音楽など)を選択してください。<strong>5MBまで</strong>対応しています。複数可。
								</p>
							</div>
			
						</div>
					</fieldset>
	
				</div>
			</div>
		</div>
	</div>
	
	<div class="row">
		<div class="col-md-8 col-md-offset-2">
			<div class="panel panel-default">
				<div class="panel-heading">
					<b>5. 説明 </b><span class="small text-muted" id="description_count">    0 / 500 文字</span>
				</div>
				<div class="panel-body">
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<textarea id="description" name="description" rows="12" class="form-control floating-label form-control" placeholder="プログラムの説明文を入力しましょう。">{{ .Program.Description }}</textarea>
							</div>
						</div>
						<div class="col-md-6">
							<div id="preview" class="markdown">
								<div class="preview_nomarkdown">
									<span>プレビュー</span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-md-8 col-md-offset-2">
			<div class="panel panel-default">
				<div class="panel-heading">
					<b>高度な設定</b><span class="small text-warning"> 投稿したプログラムがうまく動作しない際に設定してください。</span>
				</div>
				<div class="panel-body">
					<fieldset>
	
						<div class="form-group row">
							<label for="steps" class="col-md-3 form-label text-right">6. ステップ数の上限</label>
							<div class="col-md-6">
								<input type="text" id="steps" class="form-control floating-label" placeholder="デフォルト:5000" data-hint="最大値は30000です" name="steps" value="{{ .Program.Steps }}" />
							</div>
							<div class="help_cap col-md-3">
								<p>
									描画した部分がしばらくすると消えてしまう、画面がちらつく、などの問題が現れた場合に値を増やしてください。<strong>ただし、値の増加に伴いCPU使用率も上昇します。</strong>
								</p>
							</div>
						</div>
	
					</fieldset>

				</div>
			</div>
		</div>
	</div>

	
	<div class="row">
		<div class="col-md-8 col-md-offset-2">
			<div class="col-md-6">
				<div class="form-group">
					<button class="btn btn-default btn-raised btn-block form-control" type="reset">キャンセル</a>
				</div>
			</div>
			<div class="col-md-6">
				<div class="form-group">
					<button class="btn btn-success btn-raised btn-block form-control" type="submit">更新</a>
				</div>
			</div>
		</div>
	</div>
	
</form>

<div id="modal" class="modal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
				<h4 id="modal_title" class="modal-title"></h4>
			</div>
			<div class="modal-body">
				<p id="modal_text">One fine body…</p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
			</div>
		</div>
	</div>
</div>

{{ linkJS "jquery.uploadbox.js" }}
<script type="text/javascript">
$(document).ready(function() {

	var thumbnail = "";
	var startax   = "";
	var attachments = new Array(0);

	$("#thumb_box").uploadbox({
		emptyText:      "サムネイル画像をドロップしてください。",
		emptyIconClass: "mdi-editor-insert-photo",
		limitSize: 1024*1024*3
	}).on("onupload", function(e, data) {
		thumbnail = data;
	});
	$("#startax_box").uploadbox({
		emptyText:      "startaxファイルをドロップしてください。",
		limitSize: 1024*1024*1
	}).on("onupload", function(e, data) {
		startax = data;
	});
	$("#attachments_box").uploadbox({
		allowMultiFiles: true,
		emptyText:      "添付ファイルをドロップしてください。",
		limitSize: 1024*1024*5
	}).on("onupload", function(e, data, file) {
		attachments.push({
			"name" : file.name,
			"value": data
		});

		updateAttachmentsProgress(1024*1024*5);
	}).on("ondelete", function(e) {
		updateAttachmentsProgress(1024*1024*5);
	});

	$("#description").bind('input propertychange', function() {
		updatePreview();

		$("#description_count").text(String($(this).val().length) + " / 500 文字");

		function updatePreview() {
			$.ajax({
				type: "GET",
				url: "/api/markdown/",
				dataType: "json",
				data: { text: $("#description").val() },
				success: function (json) {
					$("#preview").html(json["Markdown"]);
				}
			});
		}
	});

	$("#preview").css({
		"height": $("#description").css("height")
	});

	$("#update_program").on("submit", function (event) {
		event.preventDefault();

		var form = $(this).serializeArray();
		form.push({
			"name":  "thumbnail",
			"value": thumbnail
		});
		form.push({
			"name":  "startax",
			"value": startax
		});
		form.push({
			"name":  "attachments",
			"value": JSON.stringify(attachments)
		});

		$.ajax({
			type: "POST",
			url:  "/api/program/update/",
			dataType: "json",
			data: form
		}).success(function (json) {
			var message = "";
			if (!json.responseJSON) {
				message = json.Message;
			} else {
				message = json.responseJSON.Message;
			}

			assertBottom("success", message);
		}).error(function (json) {
			
			var modal = $("#modal");
			var modal_title = $("#modal_title");
			var modal_text = $("#modal_text");

			modal_title.text("エラー");

			var message = "";
			if (!json.responseJSON) {
				message = json.Message;
			} else {
				message = json.responseJSON.Message;
			}

			modal_text.text(message);
			modal.modal();

		});

	});

	$("#thumb_box .upload_box_preview").attr("src", "/api/program/thumbnail/?p={{ .Program.Id }}").show();

	$("#startax_box .upload_box_status").text("startax");

	{{ range $i, $file := .Program.Attachments.Files }}
		attachments.push({
			"name":  "{{ $file.Name }}",
			"value": "PASS",
		});

		var del = $('<a class="badge" href="javascript:void();">X</a>');
		del.on("click", function() {
			attachments[{{ $i }}].value = "DELETE";
			$("#attachments_box").deleteItemUploadbox("{{ $file.Name }}");
		});
		// TODO: SmallPreview。arraybufferを解析する必要があるかもしれない。
		$("#attachments_box ul").show().append($('<li data-fname="{{ $file.Name }}" data-size="{{ len $file.Data }}">{{ $file.Name }} </li>').append(del));

		$("#attachments_box").data("totalSize", $("#attachments_box").data("totalSize") + {{ len $file.Data }})
		$("#attachments_box").data("fileCount", $("#attachments_box").data("fileCount") + 1);
	{{ end }}

	updateAttachmentsProgress(1024*1024*5);

	$("#description").trigger("propertychange");

	if ({{ .User }} == 0) {
		document.location.href = "/user/login/";
	}

	function updateAttachmentsProgress(limit) {
		var total = $("#attachments_box").data("totalSize");

		$("#attachments_capacity").css({
			"width": String((total / limit) * 100) + "%"
		});
	}

});


</script>

{{ end }}
